# Generated by Django 5.0.2 on 2024-03-19 13:24

import WellnessCorner.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Allergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ApiProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=255, unique=True)),
                ('brands', models.CharField(max_length=100)),
                ('quantity', models.CharField(max_length=50)),
                ('categories', models.CharField(max_length=200)),
                ('image', models.ImageField(blank=True, null=True, upload_to='api_product_images/')),
                ('ean_code', models.CharField(blank=True, help_text='European Article Number (EAN) code', max_length=13, null=True, unique=True)),
                ('kcal_per_100g', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=10, null=True)),
                ('protein_per_100g', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=10, null=True)),
                ('carbs_per_100g', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=10, null=True)),
                ('fats_per_100g', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=10, null=True)),
                ('sugars_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sodium_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('saturated_fats_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('product_type', models.CharField(choices=[('None', 'None'), ('lactate', 'Lactate'), ('carne', 'Carne'), ('legume', 'Legume'), ('fructe', 'Fructe')], default='None', max_length=20)),
                ('user_rating', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('total_ratings', models.IntegerField(default=0)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('nutriscore', models.CharField(blank=True, max_length=1, null=True)),
                ('is_vegan', models.BooleanField(default=False)),
                ('is_vegetarian', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('age_confirmation', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal_type', models.CharField(choices=[('Breakfast', 'Breakfast'), ('Lunch', 'Lunch'), ('Dinner', 'Dinner'), ('Snacks', 'Snacks')], max_length=20)),
                ('total_calories', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_proteins', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_carbs', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_fats', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=100)),
                ('brands', models.CharField(max_length=100)),
                ('quantity', models.CharField(max_length=50)),
                ('categories', models.CharField(max_length=200)),
                ('image', models.ImageField(blank=True, null=True, upload_to='product_images/')),
                ('ean_code', models.CharField(blank=True, help_text='European Article Number (EAN) code', max_length=13, null=True, unique=True)),
                ('kcal_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('protein_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('carbs_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('fats_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sugars_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sodium_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('saturated_fats_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('product_type', models.CharField(choices=[('None', 'None'), ('lactate', 'Lactate'), ('carne', 'Carne'), ('legume', 'Legume'), ('fructe', 'Fructe')], default='None', max_length=20)),
                ('user_rating', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('total_ratings', models.IntegerField(default=0)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('nutriscore', models.CharField(blank=True, max_length=1, null=True)),
                ('approved', models.BooleanField(default=False)),
                ('is_vegan', models.BooleanField(default=False)),
                ('is_vegetarian', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='recipes/')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('content', models.TextField()),
                ('description', models.TextField(blank=True, max_length=120, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MealApiProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_grams', models.DecimalField(decimal_places=2, max_digits=10)),
                ('kcal_per_100g', models.DecimalField(decimal_places=2, max_digits=10)),
                ('protein_per_100g', models.DecimalField(decimal_places=2, max_digits=10)),
                ('carbs_per_100g', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fats_per_100g', models.DecimalField(decimal_places=2, max_digits=10)),
                ('api_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WellnessCorner.apiproduct')),
                ('meal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WellnessCorner.meal')),
            ],
        ),
        migrations.AddField(
            model_name='meal',
            name='api_products',
            field=models.ManyToManyField(through='WellnessCorner.MealApiProduct', to='WellnessCorner.apiproduct'),
        ),
        migrations.CreateModel(
            name='MealProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_grams', models.DecimalField(decimal_places=2, max_digits=10)),
                ('kcal_per_100g', models.DecimalField(decimal_places=2, max_digits=10)),
                ('protein_per_100g', models.DecimalField(decimal_places=2, max_digits=10)),
                ('carbs_per_100g', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fats_per_100g', models.DecimalField(decimal_places=2, max_digits=10)),
                ('meal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WellnessCorner.meal')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WellnessCorner.product')),
            ],
        ),
        migrations.AddField(
            model_name='meal',
            name='products',
            field=models.ManyToManyField(through='WellnessCorner.MealProduct', to='WellnessCorner.product'),
        ),
        migrations.CreateModel(
            name='BasketItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(choices=[('database', 'Database'), ('api', 'API')], max_length=20)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('api_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='WellnessCorner.apiproduct')),
                ('basket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='WellnessCorner.basket')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='WellnessCorner.product')),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(choices=[('database', 'Database'), ('api', 'API')], max_length=20)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('api_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='WellnessCorner.apiproduct')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='WellnessCorner.product')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients', to='WellnessCorner.recipe')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(default='', max_length=254, unique=True)),
                ('name', models.CharField(default='', max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_subscribed', models.BooleanField(default=False)),
                ('diet', models.CharField(choices=[('None', 'None'), ('vegan', 'Vegan'), ('Vegetarian', 'Vegetarian'), ('Low Fat', 'Low Fat'), ('High Protein', 'High Protein'), ('Keto', 'Keto')], default='None', max_length=20)),
                ('allergies', models.ManyToManyField(blank=True, to='WellnessCorner.allergy')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', WellnessCorner.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.PositiveIntegerField()),
                ('height', models.PositiveIntegerField()),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], default='male', max_length=10)),
                ('activity_level', models.CharField(choices=[('sedentary', 'Sedentary'), ('lightly_active', 'Lightly Active'), ('moderately_active', 'Moderately Active'), ('very_active', 'Very Active'), ('extra_active', 'Extra Active')], default='sedentary', max_length=20)),
                ('goal', models.CharField(choices=[('cut', 'Cut'), ('bulk', 'Bulk'), ('maintain', 'Maintain')], default='maintain', max_length=10)),
                ('daily_calories', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('subscription_date', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='recipe',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ProductRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, default=0, max_digits=3)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WellnessCorner.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='rated_by',
            field=models.ManyToManyField(through='WellnessCorner.ProductRating', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_type', models.CharField(blank=True, choices=[('Product', 'Product'), ('ApiProduct', 'API Product')], max_length=20, null=True)),
                ('object_id', models.PositiveIntegerField(default=0)),
                ('title', models.CharField(blank=True, max_length=150, null=True)),
                ('content', models.TextField()),
                ('product_name', models.CharField(blank=True, max_length=255, null=True)),
                ('pub_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PendingProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=100)),
                ('brands', models.CharField(max_length=100)),
                ('quantity', models.CharField(max_length=50)),
                ('categories', models.CharField(max_length=200)),
                ('image', models.ImageField(blank=True, null=True, upload_to='pending_product_images/')),
                ('ean_code', models.CharField(blank=True, help_text='European Article Number (EAN) code', max_length=13, null=True, unique=True)),
                ('kcal_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('protein_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('carbs_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('fats_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sugars_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sodium_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('saturated_fats_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('product_type', models.CharField(choices=[('None', 'None'), ('lactate', 'Lactate'), ('carne', 'Carne'), ('legume', 'Legume'), ('fructe', 'Fructe')], default='None', max_length=20)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('user_rating', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('approved', models.BooleanField(default=False)),
                ('nutriscore', models.CharField(blank=True, max_length=1, null=True)),
                ('is_vegan', models.BooleanField(default=False)),
                ('is_vegetarian', models.BooleanField(default=False)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='mealproduct',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='mealapiproduct',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meal',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('used', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('pub_date', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WellnessCorner.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='basket',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Banned',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banned_until', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ApiProductRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, default=0, max_digits=3)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WellnessCorner.apiproduct')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='apiproduct',
            name='rated_by',
            field=models.ManyToManyField(through='WellnessCorner.ApiProductRating', to=settings.AUTH_USER_MODEL),
        ),
    ]
